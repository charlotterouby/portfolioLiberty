//  ==========  Variables Normalize.scss  ==========
// These 3 variables are copies of ones used in Compass' Vertical Rhythm module.
// The font size set on the root html element.
$base-font-size: 16px !default;
// The base line height determines the basic unit of vertical rhythm.
$base-line-height: 24px !default;
// The length unit in which to output vertical rhythm values.
// Supported values: px, em, rem.
$rhythm-unit: 'em' !default;
// Note: This project also makes use of variables from Compass' support
// module. Documentation for this can be found on the wiki at:
// http://compass-style.org/reference/compass/support/
$critical-usage-threshold: 0.01 !default;
$browser-minimum-versions: ('chrome': null, 'firefox': null, 'ie': null, 'safari': null, 'opera': null) !default;

// The default font family.
$base-font-family: sans-serif !default;
// The font sizes for h1-h6.
$h1-font-size: 2 * $base-font-size !default;
$h2-font-size: 1.5 * $base-font-size !default;
$h3-font-size: 1.17 * $base-font-size !default;
$h4-font-size: 1 * $base-font-size !default;
$h5-font-size: 0.83 * $base-font-size !default;
$h6-font-size: 0.67 * $base-font-size !default;
// The amount lists and blockquotes are indented.
$indent-amount: 40px !default;

// The following variable controls whether normalize-scss will output
// font-sizes, line-heights and block-level top/bottom margins that form a basic
// vertical rhythm on the page, which differs from the original Normalize.css.
// However, changing any of the variables above will cause
// $normalize-vertical-rhythm to be automatically set to true.
$normalize-vertical-rhythm: false !default;

//  ==========  Variables susy grid  ==========
$susy: (
    global-box-sizing: border-box,
    columns: 16,
    gutters: 1 / 4,
    gutter-position: split,
    math: fluid,
    output: float,
//    debug: (
//        image: show-columns,
//        color: #FFC8C8,
//        output: background,
//        toggle: top left,
//    )
);

//  ==========  Variables typesettings   ==========  
$font-sans: 'Futura', 'Verdana', 'Arial', sans-serif;
 $base-vertical-unit: 6px;
 $base-line-multi: 4;
 $base-font-size: 16px;
 $ms-ratio: 1.414;
 $paragraph-indent: true;
 $paragraph-justify: true;
 $load-typesetted: true;

//  ==========  Variables media queries  ==========
$media-mobile-paysage: (max-width 767px) (orientation landscape);
$media-mobile-max: 767px;
$media-tablet-min: 768px;
$media-tablet-max: 1024px;
$media-desktop-min: 1025px;
$container-max-width: 1980px;

//  ==========  Variables couleurs  ==========
$palettes: (
    bleu: (
        dark:#378c8c,
        mid-dark:#5bb4b4,
        base:#8ad9d9,
        mid-light:#bef1f1,
        light:#f1fefe
    ),
    jaune: (
        dark:#e9ba5b,
        mid-dark:#ffd580,
        base:#ffe0a2,
        mid-light:#ffedc8,
        light:#fffbf2
    ),
    peach: (
        dark:#e95b5b,
        mid-dark:#ff8080,
        base:#ffa2a2,
        mid-light:#ffc8c8,
        light:#fff2f2
    )
);

$white: #fff;
$text-color: #696969;

//  ==========  Fonction & mixin couleurs  ==========
@function palette($palette, $tone: 'base') {
    @return map-get(map-get($palettes, $palette), $tone);
}

@mixin alpha-attribute($attribute, $color, $background) {
    $percent: alpha($color) * 100%;
    $opaque: opacify($color, 1);
    $solid-color: mix($opaque, $background, $percent);
    #{$attribute}: $solid-color;
    #{$attribute}: $color;
}
